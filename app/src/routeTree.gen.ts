/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PreciosRouteImport } from './routes/precios'
import { Route as ContactoRouteImport } from './routes/contacto'
import { Route as ConfirmacionRouteImport } from './routes/confirmacion'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ServiciosIndexRouteImport } from './routes/servicios/index'
import { Route as ServiciosNutricionClinicaRouteImport } from './routes/servicios/$nutricion-clinica'

const PreciosRoute = PreciosRouteImport.update({
  id: '/precios',
  path: '/precios',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactoRoute = ContactoRouteImport.update({
  id: '/contacto',
  path: '/contacto',
  getParentRoute: () => rootRouteImport,
} as any)
const ConfirmacionRoute = ConfirmacionRouteImport.update({
  id: '/confirmacion',
  path: '/confirmacion',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ServiciosIndexRoute = ServiciosIndexRouteImport.update({
  id: '/servicios/',
  path: '/servicios/',
  getParentRoute: () => rootRouteImport,
} as any)
const ServiciosNutricionClinicaRoute =
  ServiciosNutricionClinicaRouteImport.update({
    id: '/servicios/$nutricion-clinica',
    path: '/servicios/$nutricion-clinica',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/confirmacion': typeof ConfirmacionRoute
  '/contacto': typeof ContactoRoute
  '/precios': typeof PreciosRoute
  '/servicios/$nutricion-clinica': typeof ServiciosNutricionClinicaRoute
  '/servicios': typeof ServiciosIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/confirmacion': typeof ConfirmacionRoute
  '/contacto': typeof ContactoRoute
  '/precios': typeof PreciosRoute
  '/servicios/$nutricion-clinica': typeof ServiciosNutricionClinicaRoute
  '/servicios': typeof ServiciosIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/confirmacion': typeof ConfirmacionRoute
  '/contacto': typeof ContactoRoute
  '/precios': typeof PreciosRoute
  '/servicios/$nutricion-clinica': typeof ServiciosNutricionClinicaRoute
  '/servicios/': typeof ServiciosIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/confirmacion'
    | '/contacto'
    | '/precios'
    | '/servicios/$nutricion-clinica'
    | '/servicios'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/confirmacion'
    | '/contacto'
    | '/precios'
    | '/servicios/$nutricion-clinica'
    | '/servicios'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/confirmacion'
    | '/contacto'
    | '/precios'
    | '/servicios/$nutricion-clinica'
    | '/servicios/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ConfirmacionRoute: typeof ConfirmacionRoute
  ContactoRoute: typeof ContactoRoute
  PreciosRoute: typeof PreciosRoute
  ServiciosNutricionClinicaRoute: typeof ServiciosNutricionClinicaRoute
  ServiciosIndexRoute: typeof ServiciosIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/precios': {
      id: '/precios'
      path: '/precios'
      fullPath: '/precios'
      preLoaderRoute: typeof PreciosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contacto': {
      id: '/contacto'
      path: '/contacto'
      fullPath: '/contacto'
      preLoaderRoute: typeof ContactoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/confirmacion': {
      id: '/confirmacion'
      path: '/confirmacion'
      fullPath: '/confirmacion'
      preLoaderRoute: typeof ConfirmacionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/servicios/': {
      id: '/servicios/'
      path: '/servicios'
      fullPath: '/servicios'
      preLoaderRoute: typeof ServiciosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/servicios/$nutricion-clinica': {
      id: '/servicios/$nutricion-clinica'
      path: '/servicios/$nutricion-clinica'
      fullPath: '/servicios/$nutricion-clinica'
      preLoaderRoute: typeof ServiciosNutricionClinicaRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ConfirmacionRoute: ConfirmacionRoute,
  ContactoRoute: ContactoRoute,
  PreciosRoute: PreciosRoute,
  ServiciosNutricionClinicaRoute: ServiciosNutricionClinicaRoute,
  ServiciosIndexRoute: ServiciosIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
